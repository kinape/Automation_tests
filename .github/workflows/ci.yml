name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  api-e2e-k6-tests-and-report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Start API server
        run: |
          nohup node api/server.js > api.log 2>&1 &
          echo $! > api.pid

      - name: Wait for API to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:3000/health > /dev/null; then
              echo "API is up"; exit 0; fi; sleep 1; done; echo "API did not start"; cat api.log; exit 1

      - name: Run Cypress
        env:
          API_BASE_URL: http://localhost:3000/api
        run: npm run cy:run

      - name: Setup k6
        uses: grafana/setup-k6-action@v1

      - name: Run k6 load test
        env:
          K6_API_BASE_URL: http://localhost:3000
        run: k6 run k6/load-test.js

      - name: Upload Cypress reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-reports
          path: |
            cypress/reports
          if-no-files-found: warn

      - name: Upload Cypress videos and screenshots (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts
          path: |
            cypress/videos
            cypress/screenshots
          if-no-files-found: warn

      - name: Upload k6 summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: k6-summary
          path: |
            k6/summary.html
            k6/summary.json
          if-no-files-found: warn

  appium-mobile-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          cache: 'npm'

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/dists
          key: ${{ runner.os }}-android-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Install dependencies
        run: npm ci

      - name: Download Android App
        run: |
          mkdir -p mobile/app
          curl -L -o mobile/app/ApiDemos-debug.apk https://github.com/appium/android-apidemos/releases/download/v3.1.0/ApiDemos-debug.apk

      - name: Run Android emulator and tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          arch: x86_64
          target: google_apis
          profile: pixel_6
          avd-name: test
          force-avd-creation: true
          cores: 4
          ram-size: 4096
          disk-size: 10G
          emulator-options: -no-window -no-snapshot -no-audio -no-boot-anim -gpu swiftshader_indirect -camera-back none -camera-front none
          emulator-boot-timeout: 2700
          disable-animations: true
          disable-linux-hw-accel: true
          pre-emulator-launch-script: |
            echo "Resetting adb server using action SDK"
            which adb || true
            adb kill-server || true
            adb start-server
            adb version
          script: |
            set -e
            chmod +x mobile/scripts/wait-for-emulator.sh
            # Aguarda emulador ficar totalmente pronto (at√© 20 minutos)
            mobile/scripts/wait-for-emulator.sh 1200
            # Se ainda aparecer como 'offline', reinicia ADB (one-liner)
            if adb devices | grep -q 'offline'; then echo "Device is offline, restarting ADB"; adb kill-server || true; adb start-server; sleep 5; adb devices; fi
            npm run test:mobile:ci

      - name: Generate Allure HTML (mobile)
        if: always()
        run: npm run allure:generate:mobile

      - name: Upload mobile logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mobile-logs
          path: |
            mobile/logs
          if-no-files-found: warn

      - name: Upload mobile allure results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mobile-allure-results
          path: mobile/reports/allure-results
          if-no-files-found: warn

      - name: Upload mobile Allure HTML
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mobile-allure-report
          path: mobile/reports/allure-report
          if-no-files-found: warn

  playwright-mobile-suite:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests (mobile emulation)
        run: npm run test:pw:ci

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: warn
